name: "Release : Image Auto"

on:
  release:
    types: [published]
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  buildx:
    runs-on: ubuntu-latest
    env:
      working-directory: ./packages/nocodb
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
        working-directory: ./packages/nocodb
        id: nvm

      - name: Use Node.js ${{ steps.nvm.outputs.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}

      - uses: bahmutov/npm-install@v1
        with:
          working-directory: ${{ env.working-directory }}

      - name: Build nocodb and image files
        run: |
          npm run build
          npm run docker:build
        working-directory: ${{ env.working-directory }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        working-directory: packages/nocodb
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: finnoco
          IMAGE_TAG: ${{ github.event.release.tag_name }}
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest --build-arg NC_VERSION=$IMAGE_TAG . --push
